/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 spotify-bedroom.glb -t 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import {
  Center,
  Html,
  Text,
  useGLTF,
  useHelper,
  useTexture,
} from "@react-three/drei";
import { GLTF } from "three-stdlib";
import {
  CurrentlyPlaying,
  TopArtists,
  TopTracks,
} from "@/types/spotify-response";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Cube001: THREE.Mesh;
    Cube001_1: THREE.Mesh;
    ["trash-can"]: THREE.Mesh;
    Cube028: THREE.Mesh;
    Cube028_1: THREE.Mesh;
    Plane002: THREE.Mesh;
    Plane002_1: THREE.Mesh;
    Cube024: THREE.Mesh;
    Cube024_1: THREE.Mesh;
    pillow: THREE.Mesh;
    Cube110: THREE.Mesh;
    Cube110_1: THREE.Mesh;
    Cube110_2: THREE.Mesh;
    Cube110_3: THREE.Mesh;
    Cube110_4: THREE.Mesh;
    Cube007: THREE.Mesh;
    Cube007_1: THREE.Mesh;
    Cube: THREE.Mesh;
    Cube_1: THREE.Mesh;
    Cube119: THREE.Mesh;
    Cube119_1: THREE.Mesh;
    table: THREE.Mesh;
    Cylinder010: THREE.Mesh;
    Cylinder010_1: THREE.Mesh;
    Cube121: THREE.Mesh;
    Cube121_1: THREE.Mesh;
    Cube121_2: THREE.Mesh;
    Cube121_3: THREE.Mesh;
    Cube033: THREE.Mesh;
    Cube033_1: THREE.Mesh;
    Cylinder018: THREE.Mesh;
    Cylinder018_1: THREE.Mesh;
    Cylinder018_2: THREE.Mesh;
    Text: THREE.Mesh;
    Plane: THREE.Mesh;
    Plane_1: THREE.Mesh;
    Plane001: THREE.Mesh;
    Plane001_1: THREE.Mesh;
    Plane003: THREE.Mesh;
    Plane003_1: THREE.Mesh;
    Plane004: THREE.Mesh;
    Plane004_1: THREE.Mesh;
    Plane005: THREE.Mesh;
    Plane005_1: THREE.Mesh;
    Plane006: THREE.Mesh;
    Plane006_1: THREE.Mesh;
    Plane007: THREE.Mesh;
    Plane007_1: THREE.Mesh;
    Plane008: THREE.Mesh;
    Plane008_1: THREE.Mesh;
    Plane009: THREE.Mesh;
    Plane009_1: THREE.Mesh;
    Plane010: THREE.Mesh;
    Plane010_1: THREE.Mesh;
  };
  materials: {
    chair: THREE.MeshStandardMaterial;
    coding: THREE.MeshStandardMaterial;
    wood: THREE.MeshStandardMaterial;
    zee: THREE.MeshStandardMaterial;
    base: THREE.MeshStandardMaterial;
    pillow: THREE.MeshStandardMaterial;
    darken: THREE.MeshStandardMaterial;
    light: THREE.MeshStandardMaterial;
    season: THREE.MeshStandardMaterial;
    wallpaper: THREE.MeshStandardMaterial;
    bed: THREE.MeshStandardMaterial;
    xaviera: THREE.MeshStandardMaterial;
  };
  // animations: GLTFAction[]
};

const imagePlaceholder = "https://picsum.photos/seed/picsum/300/300";

export default function SpotifyBedroom({
  currentlyPlaying,
  topTracks,
  topArtists,
  ...props
}: {
  currentlyPlaying: CurrentlyPlaying;
  topTracks: TopTracks;
  topArtists: TopArtists;
} & JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/model/spotify-bedroom.glb"
  ) as GLTFResult;

  const currentlyPlayingImage = useTexture(
    currentlyPlaying.item
      ? currentlyPlaying.item.album.images[0].url
      : imagePlaceholder
  );

  const tracksItems = topTracks.items;
  const artistsItems = topArtists.items;

  const { track1, track2, track3, track4, track5 } = useTexture({
    track1: tracksItems ? tracksItems[0].album.images[0].url : imagePlaceholder,
    track2: tracksItems ? tracksItems[1].album.images[0].url : imagePlaceholder,
    track3: tracksItems ? tracksItems[2].album.images[0].url : imagePlaceholder,
    track4: tracksItems ? tracksItems[3].album.images[0].url : imagePlaceholder,
    track5: tracksItems ? tracksItems[4].album.images[0].url : imagePlaceholder,
  });

  const { artist1, artist2, artist3, artist4, artist5 } = useTexture({
    artist1: artistsItems ? artistsItems[0].images[0].url : imagePlaceholder,
    artist2: artistsItems ? artistsItems[1].images[0].url : imagePlaceholder,
    artist3: artistsItems ? artistsItems[2].images[0].url : imagePlaceholder,
    artist4: artistsItems ? artistsItems[3].images[0].url : imagePlaceholder,
    artist5: artistsItems ? artistsItems[4].images[0].url : imagePlaceholder,
  });

  currentlyPlayingImage.flipY = false;

  const center = useRef<THREE.Object3D<THREE.Object3DEventMap>>(null);

  // @ts-ignore : unexpected error
  useHelper(center, THREE.BoxHelper, "red");

  return (
    <group {...props} dispose={null}>
      <group
        position={[-3.49, 3.81, -0.853]}
        rotation={[0, -0.502, 0]}
        scale={[0.024, 0.63, 1.041]}
      >
        <mesh geometry={nodes.Cube001.geometry} material={materials.chair} />
        <mesh geometry={nodes.Cube001_1.geometry} material={materials.coding} />
      </group>
      <mesh
        geometry={nodes["trash-can"].geometry}
        material={materials.chair}
        position={[-3.649, 0.844, -4.11]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[0.853, 0.853, 0.355]}
      />
      <group
        position={[3.969, 6.624, 4.093]}
        rotation={[Math.PI / 2, -Math.PI / 2, 0]}
        scale={[1.517, 0.105, 0.791]}
      >
        <mesh geometry={nodes.Cube028.geometry} material={materials.wood} />
        <mesh geometry={nodes.Cube028_1.geometry} material={materials.zee} />
      </group>
      <group
        position={[1, 1.581, 1.765]}
        rotation={[0, 0.983, 0]}
        scale={[3.529, 3.361, 2.926]}
      >
        <mesh geometry={nodes.Plane002.geometry} material={materials.chair} />
        <mesh geometry={nodes.Plane002_1.geometry} material={materials.base} />
      </group>
      <group
        position={[-2.567, 3.098, 1.241]}
        rotation={[1.571, 0.004, -1.571]}
        scale={[-0.089, -0.027, -0.004]}
      >
        <mesh geometry={nodes.Cube024.geometry} material={materials.chair} />
        <mesh geometry={nodes.Cube024_1.geometry} material={materials.base} />
      </group>
      <mesh
        geometry={nodes.pillow.geometry}
        material={materials.pillow}
        position={[5.274, 1.325, 2.942]}
        rotation={[-0.431, 0, 0]}
        scale={[1.297, 0.075, 1.042]}
      />
      <group
        position={[-3.767, 3.5, 1.259]}
        rotation={[1.571, -0.636, 1.571]}
        scale={[0.05, 0.051, 0.036]}
      >
        <mesh geometry={nodes.Cube110.geometry} material={materials.chair} />
        <mesh geometry={nodes.Cube110_1.geometry} material={materials.darken} />

        {/* Currently playing image */}
        <mesh geometry={nodes.Cube110_2.geometry}>
          <meshStandardMaterial
            map={currentlyPlayingImage}
            emissive={"#ffffff"}
            emissiveMap={currentlyPlayingImage}
            emissiveIntensity={1}
          />
        </mesh>
        <mesh geometry={nodes.Cube110_3.geometry} material={materials.season} />
        <mesh geometry={nodes.Cube110_4.geometry} material={materials.base} />
      </group>
      <group position={[-3.921, 6.971, 0.925]} scale={[0.266, 0.222, 2.44]}>
        <mesh geometry={nodes.Cube007.geometry} material={materials.base} />
        <mesh geometry={nodes.Cube007_1.geometry} material={materials.darken} />
      </group>
      <group position={[1.298, 5.98, -1.473]} scale={[11.04, 0.114, 11.89]}>
        <mesh geometry={nodes.Cube.geometry} material={materials.base} />
        <mesh geometry={nodes.Cube_1.geometry} material={materials.wallpaper} />
      </group>
      <group
        position={[5.268, 0.857, 0.837]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[1.399, 0.154, 0.791]}
      >
        <mesh geometry={nodes.Cube119.geometry} material={materials.wood} />
        <mesh geometry={nodes.Cube119_1.geometry} material={materials.bed} />
      </group>
      <mesh
        geometry={nodes.table.geometry}
        material={materials.wood}
        position={[-3.004, 2.266, 0.241]}
        scale={[1.023, 1.339, 0.653]}
      />
      <group
        position={[-3.232, 3.911, 3.218]}
        rotation={[0, 0.997, 0]}
        scale={[0.058, 0.323, 0.058]}
      >
        <mesh
          geometry={nodes.Cylinder010.geometry}
          material={materials.chair}
        />
        <mesh
          geometry={nodes.Cylinder010_1.geometry}
          material={materials.coding}
        />
      </group>
      <group
        position={[1.362, 6.55, 4.02]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.6, 0.105, 0.716]}
      >
        <mesh geometry={nodes.Cube121.geometry} material={materials.wood} />
        <mesh geometry={nodes.Cube121_1.geometry} material={materials.light} />
        <mesh geometry={nodes.Cube121_2.geometry} material={materials.season} />
        <mesh
          geometry={nodes.Cube121_3.geometry}
          material={materials.xaviera}
        />
      </group>
      <group
        position={[6.298, 4.754, 4.098]}
        rotation={[-Math.PI, 0, 0]}
        scale={[-0.075, -0.123, -0.02]}
      >
        <mesh geometry={nodes.Cube033.geometry} material={materials.darken} />
        <mesh geometry={nodes.Cube033_1.geometry} material={materials.base} />
      </group>
      <group position={[-2.914, 3.285, -2.153]} scale={[0.324, 0.042, 0.324]}>
        <mesh
          geometry={nodes.Cylinder018.geometry}
          material={materials.darken}
        />
        <mesh
          geometry={nodes.Cylinder018_1.geometry}
          material={materials.pillow}
        />
        <mesh
          geometry={nodes.Cylinder018_2.geometry}
          material={materials.wood}
        />
      </group>
      <Html
        center
        position={[-4.129, 6.355, -3.454]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
      >
        <p>Tes</p>
      </Html>

      {/* song 1 */}
      <group
        position={[-4.129, 7.355, -3.454]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.699}
      >
        <mesh geometry={nodes.Plane.geometry} material={materials.base} />
        <mesh geometry={nodes.Plane_1.geometry}>
          {(track1.flipY = false)}
          <meshStandardMaterial map={track1} />
        </mesh>
      </group>
      <group
        position={[-4.129, 7.355, -5.204]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.699}
      >
        <mesh geometry={nodes.Plane001.geometry} material={materials.base} />
        <mesh geometry={nodes.Plane001_1.geometry}>
          {(track2.flipY = false)}
          <meshStandardMaterial map={track2} />
        </mesh>
      </group>
      <group
        position={[-4.129, 7.355, -6.944]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.699}
      >
        <mesh geometry={nodes.Plane003.geometry} material={materials.base} />
        <mesh geometry={nodes.Plane003_1.geometry}>
          {(track3.flipY = false)}
          <meshStandardMaterial map={track3} />
        </mesh>
      </group>
      <group
        position={[-4.129, 7.355, -8.635]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.699}
      >
        <mesh geometry={nodes.Plane004.geometry} material={materials.base} />
        <mesh geometry={nodes.Plane004_1.geometry}>
          {(track4.flipY = false)}
          <meshStandardMaterial map={track4} />
        </mesh>
        <Html center rotation={[Math.PI / 2, 0, -Math.PI / 2]}>
          <p className="bg-red-50 text-nowrap">JKT 48</p>
        </Html>
      </group>
      <group
        position={[-4.129, 7.355, -10.333]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.699}
      >
        <mesh geometry={nodes.Plane005.geometry} material={materials.base} />
        <mesh geometry={nodes.Plane005_1.geometry}>
          {(track5.flipY = false)}
          <meshStandardMaterial map={track5} />
        </mesh>
      </group>

      {/* artists */}
      <group
        position={[-4.129, 5.061, -3.454]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.699}
      >
        <mesh geometry={nodes.Plane010.geometry} material={materials.base} />
        <mesh geometry={nodes.Plane010_1.geometry}>
          {(artist1.flipY = false)}
          <meshStandardMaterial map={artist1} />
        </mesh>
      </group>
      <group
        position={[-4.129, 5.061, -5.204]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.699}
      >
        <mesh geometry={nodes.Plane009.geometry} material={materials.base} />
        <mesh geometry={nodes.Plane009_1.geometry}>
          {(artist2.flipY = false)}
          <meshStandardMaterial map={artist2} />
        </mesh>
      </group>
      <group
        position={[-4.129, 5.061, -6.944]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.699}
      >
        <mesh geometry={nodes.Plane008.geometry} material={materials.base} />
        <mesh geometry={nodes.Plane008_1.geometry}>
          {(artist3.flipY = false)}
          <meshStandardMaterial map={artist3} />
        </mesh>
      </group>
      <group
        position={[-4.129, 5.061, -8.635]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.699}
      >
        <mesh geometry={nodes.Plane007.geometry} material={materials.base} />
        <mesh geometry={nodes.Plane007_1.geometry}>
          {(artist4.flipY = false)}
          <meshStandardMaterial map={artist4} />
        </mesh>
      </group>
      <group
        position={[-4.129, 5.061, -10.333]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.699}
      >
        <mesh geometry={nodes.Plane006.geometry} material={materials.base} />
        <mesh geometry={nodes.Plane006_1.geometry}>
          {(artist5.flipY = false)}
          <meshStandardMaterial map={artist5} />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/model/spotify-bedroom.glb");
